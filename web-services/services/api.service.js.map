{"version":3,"sources":["../../services/api.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,OAAE,EAA4B,mBAAA,EAAoB,MAAM,eAAA,CAAgB;AAI/E,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AAKzC;IAgBE,oBAA2B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAfzC,8BAAyB,GAAuB;YACtD,eAAe,EAAE,IAAI;YACrB,YAAY,EAAE,mBAAmB,CAAC,IAAI;SACvC,CAAC;QAEM,8BAAyB,GAAuB;YACtD,eAAe,EAAE,IAAI;YACrB,YAAY,EAAE,mBAAmB,CAAC,IAAI;SACvC,CAAC;QAEM,uBAAkB,GAAuB;YAC/C,eAAe,EAAE,KAAK;YACtB,YAAY,EAAE,mBAAmB,CAAC,IAAI;SACvC,CAAC;IAEkD,CAAC;IAErD;;;;;OAKG;IACI,6BAAQ,GAAf,UAAgB,WAAwB,EAAE,MAAc,EAAE,IAAY;QACpE,IAAM,OAAO,GAAY,IAAI,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3G,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACrH,CAAC;IAEM,gCAAW,GAAlB,UAAoB,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,WAAwB;QACxF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE,EAAC,UAAU,EAAI,WAAW,CAAC,QAAQ,EAAC,CAAC,CAAC;IACnG,CAAC;IAED;;;;OAIG;IACI,8BAAS,GAAhB,UAAiB,MAAc,EAAE,IAAY;QAC3C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC;IAED;;;;OAIG;IACI,4BAAO,GAAd,UAAe,MAAc,EAAE,IAAY,EAAE,MAAc;QACzD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAC3F,CAAC;IAED;;;;OAIG;IACI,6BAAQ,GAAf,UAAgB,MAAc,EAAE,IAAY;QAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAClF,CAAC;IAEM,+BAAU,GAAjB,UAAkB,MAAc,EAAE,IAAY,EAAE,IAAgC;QAC9E,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAEM,4BAAO,GAAd,UAAe,MAAc,EAAE,IAAY,EAAE,IAAmB;QAC9D,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IACD;;;;OAIG;IACI,mCAAc,GAArB,UAAsB,MAAc,EAAE,IAAY;QAChD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAClF,CAAC;IAEM,kCAAa,GAApB,UAAqB,WAAwB,EAAE,MAAc,EAAE,IAAY;QACvE,IAAM,OAAO,GAAY,IAAI,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3G,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;IACvH,CAAC;IAEM,4BAAO,GAAd,UAAe,MAAc,EAAE,IAAY;QACvC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC7E,CAAC;IAEM,6BAAQ,GAAf,UAAgB,WAAwB,EAAE,MAAc,EAAE,IAAY,EAAE,IAAS;QAC/E,IAAM,OAAO,GAAY,IAAI,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAC;QAC3D,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3G,IAAI,QAAQ,GAAS,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAEtC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAG,OAAO,CAAC,CAAC;IACtE,CAAC;IACI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACF,iBAAC;CAzGD,AAyGC,IAAA;SAzGY,UAAU","file":"api.service.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Headers, RequestOptionsArgs, ResponseContentType} from '@angular/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport {WebService} from './web.service';\r\nimport {CanonicalUser, Credentials, UpdateCanonicalUserRequest} from \"../models/canonical-user.model\";\r\n\r\n\r\n\r\nexport class ApiService {\r\n  private securedJsonRequestOptions: RequestOptionsArgs = {\r\n    withCredentials: true,\r\n    responseType: ResponseContentType.Json\r\n  };\r\n\r\n  private securedBlobRequestOptions: RequestOptionsArgs = {\r\n    withCredentials: true,\r\n    responseType: ResponseContentType.Blob\r\n  };\r\n\r\n  private blobRequestOptions: RequestOptionsArgs = {\r\n    withCredentials: false,\r\n    responseType: ResponseContentType.Blob\r\n  };\r\n\r\n  public constructor(private webService: WebService) {}\r\n\r\n  /**\r\n   * Gets the user authentication state by logging in\r\n   * @method getLogin\r\n   * @param Credentials - interface containing the username and password of the user to log in\r\n   * @return {Observable} an observable that returns the requested user or an error\r\n   */\r\n  public getLogin(credentials: Credentials, origin: string, path: string): Observable<{}> {\r\n    const headers: Headers = new Headers();\r\n    headers.append('Authorization', 'Basic ' + window.btoa(credentials.username + ':' + credentials.password));\r\n\r\n    return this.webService.getRequest(origin, path, Object.assign({headers: headers}, this.securedJsonRequestOptions));\r\n  }\r\n\r\n  public putPassword( origin: string, path: string, userID: string, credentials: Credentials): Observable<{}> {\r\n    return this.webService.patchRequest(origin, path + userID, {'password' :  credentials.password});\r\n  }\r\n\r\n  /**\r\n   * Delete the user authentication state (logs out)\r\n   * @method getLogout\r\n   * @return {Observable} an observable that returns the requested report or an error\r\n   */\r\n  public putLogout(origin: string, path: string): Observable<{}> {\r\n    return this.webService.deleteRequest(origin, path);\r\n  }\r\n\r\n  /**\r\n   * Get the users with the specified user id\r\n   * @method getUser\r\n   * @return {Observable} an observable that returns the requested user or an error\r\n   */\r\n  public getUser(origin: string, path: string, userID: string): Observable<{}> {\r\n    return this.webService.getRequest(origin, path + userID, this.securedJsonRequestOptions);\r\n  }\r\n\r\n  /**\r\n   * Get the list of users that the authenticate administrator is allowed to see\r\n   * @method getUsers\r\n   * @return {Observable} an observable that returns the requested user list or an error\r\n   */\r\n  public getUsers(origin: string, path: string): Observable<{}> {\r\n    return this.webService.getRequest(origin, path, this.securedJsonRequestOptions);\r\n  }\r\n\r\n  public updateUser(origin: string, path: string, user: UpdateCanonicalUserRequest): Observable <any> {\r\n    return this.webService.patchRequest(origin, path + user.id, user);\r\n  }\r\n\r\n  public addUser(origin: string, path: string, user: CanonicalUser): Observable<any> {\r\n    return this.webService.postRequest(origin, path, user);\r\n  }\r\n  /**\r\n   * Get the list of users that the authenticate user is allowed to see\r\n   * @method getUsersBasics\r\n   * @return {Observable} an observable that returns the requested user list or an error\r\n   */\r\n  public getUsersBasics(origin: string, path: string): Observable<{}> {\r\n    return this.webService.getRequest(origin, path, this.securedJsonRequestOptions);\r\n  }\r\n\r\n  public getFileSecure(credentials: Credentials, origin: string, path: string): Observable<{}> {\r\n      const headers: Headers = new Headers();\r\n      headers.append('Authorization', 'Basic ' + window.btoa(credentials.username + ':' + credentials.password));\r\n\r\n      return this.webService.getRequest(origin, path, Object.assign({headers: headers}, this.securedBlobRequestOptions));\r\n  }\r\n\r\n  public getFile(origin: string, path: string): Observable<{}> {\r\n      return this.webService.getRequest(origin, path, this.blobRequestOptions);\r\n  }\r\n\r\n  public postFile(credentials: Credentials, origin: string, path: string, data: any): Observable<{}> {\r\n    const headers: Headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/octet-stream\");\r\n    headers.append('Authorization', 'Basic ' + window.btoa(credentials.username + ':' + credentials.password));\r\n\r\n    let blobData: Blob = new Blob([data]);\r\n\r\n    return this.webService.postUpload(origin, path, blobData , headers);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WebService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}