{"version":3,"sources":["../../services/idle.service.ts"],"names":[],"mappings":"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","file":"idle.service.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {Idle, DEFAULT_INTERRUPTSOURCES} from '@ng-idle/core';\r\n\r\nimport {NotificationsService, Notification} from 'angular2-notifications';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport {ApiService} from \"./api.service\";\r\n\r\n\r\nexport class IdleService {\r\n\r\n  public logoutWarning: Notification;\r\n  public logoutConfirmation: Notification;\r\n  public origin: string; // base path for API calls\r\n  public logoutPath: string; // path for logging out user\r\n  public redirectURL: string; // path for redirecting browser after timeout\r\n\r\n  private idleTime: number = 20; // DEFAULT - 20 seconds\r\n  private idleWarningTime: number = 10; // DEFAULT - how long to show the warning before logging out.\r\n\r\n  public constructor(\r\n    private idle: Idle,\r\n    private notificationsService: NotificationsService,\r\n    private router: Router,\r\n    private apiService: ApiService,\r\n  ) {\r\n    this.idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n\r\n    this.idle.onIdleEnd.subscribe(() => this.onIdleEnd());\r\n    this.idle.onTimeout.subscribe(() => this.onTimeout());\r\n    this.idle.onIdleStart.subscribe(() => this.onIdleStart());\r\n    this.idle.onTimeoutWarning.subscribe((countdown: any) => this.onIdleWarning(countdown));\r\n\r\n  }\r\n\r\n  init(idleTime: number, idleWarningTime: number, redirectURL: string) {\r\n    this.idleTime = idleTime;\r\n    this.idleWarningTime = idleWarningTime;\r\n    this.redirectURL = redirectURL;\r\n\r\n    this.idle.setIdle(this.idleTime);\r\n    this.idle.setTimeout(this.idleWarningTime);\r\n\r\n    this.resetIdle();\r\n  }\r\n\r\n  onTimeout() {\r\n    console.log(\"Timed Out!\");\r\n    this.onLogout();\r\n  }\r\n\r\n  onLogout() {\r\n    this.idle.stop();\r\n    this.router.navigate([this.redirectURL]);\r\n    this.logoutConfirmation = this.notificationsService.info(\r\n      'Logout Notice',\r\n      'You were logged out due to inactivity',\r\n      {timeOut: 0}\r\n    );\r\n  }\r\n\r\n  onIdleStart() {\r\n    this.logoutWarning = this.notificationsService.warn(\r\n      'Logout Warning',\r\n      '',\r\n      {timeOut: this.idleWarningTime * 1000}\r\n    );\r\n  }\r\n\r\n  onIdleWarning(countdown: number) {\r\n    if (this.logoutWarning) {\r\n      this.logoutWarning.content = `You will be logged out of this application in ${countdown} seconds due to inactivity`;\r\n    }\r\n  }\r\n\r\n  onIdleEnd() {\r\n    if (this.logoutWarning) {\r\n      this.notificationsService.remove(this.logoutWarning.id);\r\n    }\r\n  }\r\n\r\n  resetIdle() {\r\n    console.log(\"started\");\r\n    this.clearLogoutConfirmation();\r\n    this.idle.watch();\r\n  }\r\n\r\n  clearLogoutConfirmation() {\r\n    if (this.logoutConfirmation) {\r\n      this.notificationsService.remove(this.logoutConfirmation.id);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Idle, },\n{type: NotificationsService, },\n{type: Router, },\n{type: ApiService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}